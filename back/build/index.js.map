{"version":3,"sources":["../src/index.js"],"names":["console","log","start","app","get","req","res","allUsers","connection","query","err","results","json","post","user_name","result","redirect","user_id","next","listen"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA;;AAEAA,OAAO,CAACC,GAAR,uB,CAEA;;AACA,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG;AAAA;AAAA;AAAA;AAAA;AAEd;AACAC,yBAAIC,GAAJ,CAAQ,QAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,kBAAMC,QAAQ,GAAEC,qBAAWC,KAAX,CACZ,uBADY,EAEZ,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACrBL,gBAAAA,GAAG,CAACM,IAAJ,CAASD,OAAT;AAED,eALW,CAAhB;AAOH,aARD,EAHc,CAcd;;;AACAR,yBAAIU,IAAJ,CAAS,WAAT,EAAsB,UAACR,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACxBQ,SADwB,GACVT,GAAG,CAACI,KADM,CACxBK,SADwB;;AAEhCN,mCAAWC,KAAX,CAAiB,0BAAjB,EACE;AACEK,gBAAAA,SAAS,EAATA;AADF,eADF,EAKE,UAACJ,GAAD,EAAMK,MAAN,EAAiB;AACjBT,gBAAAA,GAAG,CAACU,QAAJ,CAAa,QAAb;AACD,eAPD;AAQD,aAVH,EAfc,CA2Bd;;;AACAb,yBAAIU,IAAJ,CAAS,eAAT,EAA0B,UAACR,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAC5BW,OAD4B,GAChBZ,GAAG,CAACI,KADY,CAC5BQ,OAD4B;;AAEpCT,mCAAWC,KAAX,4CAAqDQ,OAArD,QAEE,UAACP,GAAD,EAAMK,MAAN,EAAiB;AACjBT,gBAAAA,GAAG,CAACU,QAAJ,CAAa,QAAb;AACD,eAJD;AAKD,aAPH,EA5Bc,CAoCd;;;AAEAb,yBAAIU,IAAJ,CAAS,eAAT,EAA0B,UAACR,GAAD,EAAMC,GAAN,EAAUY,IAAV,EAAmB;AAAA,kBAClCD,OADkC,GACzBZ,GAAG,CAACI,KADqB,CAClCQ,OADkC;AAAA,kBAEjCH,SAFiC,GAEnBT,GAAG,CAACI,KAFe,CAEjCK,SAFiC;;AAIzCN,mCAAWC,KAAX,yCAAkDK,SAAlD,+BAAgFG,OAAhF,GAGE,UAACP,GAAD,EAAMK,MAAN,EAAiB;AACjBT,gBAAAA,GAAG,CAACU,QAAJ,CAAa,QAAb;AACD,eALD;AAMD,aAVH,EAtCc,CAkDZ;;;AAEAb,yBAAIC,GAAJ,CAAQ,WAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACvBW,OADuB,GACdZ,GAAG,CAACI,KADU,CACvBQ,OADuB;;AAEhC,kBAAMV,QAAQ,GAAEC,qBAAWC,KAAX,8CAC0BQ,OAD1B,GAEZ,UAASP,GAAT,EAAcC,OAAd,EAAuB;AACrBL,gBAAAA,GAAG,CAACM,IAAJ,CAASD,OAAT;AAED,eALW,CAAhB;AAOH,aATC;;AAWFR,yBAAIgB,MAAJ,CAAW,IAAX,EAAiB;AAAA,qBAAMnB,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAN;AAAA,aAAjB;;AA/Dc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALC,KAAK;AAAA;AAAA;AAAA,GAAX;;AAkEAA,KAAK","sourcesContent":["import app from './app'\nimport connection from './mysqlConfig'\n\nimport regeneratorRuntime from \"regenerator-runtime\";\n\nconsole.log(regeneratorRuntime)\n\n//router \nconst start = async () => {\n\n// All users\napp.get('/users',(req, res) => {\n    const allUsers =connection.query(\n        'SELECT * FROM `users`',\n        function(err, results) {\n          res.json(results);\n          \n        }\n      );\n});\n\n\n//add user with redirect \napp.post('/add/user', (req, res) => {\n    const { user_name } = req.query;\n    connection.query('INSERT INTO users SET ? ',\n      {\n        user_name\n        \n      }\n    , (err, result) => {\n      res.redirect('/users');\n    });\n  });\n\n// delete user with redirect\napp.post('/user/delete/', (req, res) => {\n    const { user_id } = req.query;\n    connection.query(`DELETE FROM users WHERE user_id =${user_id} `\n    \n    , (err, result) => {\n      res.redirect('/users');\n    });\n  });\n// update user name with redirect \n\napp.post('/user/update/', (req, res,next) => {\n    const {user_id}=req.query;\n    const { user_name } = req.query;\n\n    connection.query(`UPDATE users SET user_name = '${user_name}' WHERE user_id = ${user_id}`\n\n    \n    , (err, result) => {\n      res.redirect('/users');\n    });\n  });\n\n  // get user by id \n\n  app.get('/user/get',(req, res) => {\n      const {user_id}=req.query;\n    const allUsers =connection.query(\n        `SELECT * FROM  users where user_id=${user_id}`,\n        function(err, results) {\n          res.json(results);\n          \n        }\n      );\n});\n\napp.listen(8080, () => console.log(\"server listening on port 8080\"));\n};\n\nstart();"],"file":"index.js"}